{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to handle errors globally\napi.interceptors.response.use(response => response, error => {\n  if (error.response) {\n    // The request was made and the server responded with a status code\n    // that falls out of the range of 2xx\n    console.error('API Error:', error.response.data);\n    console.error('Status:', error.response.status);\n    console.error('Headers:', error.response.headers);\n  } else if (error.request) {\n    // The request was made but no response was received\n    console.error('No response received:', error.request);\n  } else {\n    // Something happened in setting up the request that triggered an Error\n    console.error('Error:', error.message);\n  }\n  return Promise.reject(error);\n});\nexport const getConversations = async () => {\n  const response = await api.get('/conversations');\n  return response.data;\n};\nexport const getMessages = async waId => {\n  const response = await api.get(`/messages/${waId}`);\n  return response.data;\n};\nexport const sendMessage = async messageData => {\n  const response = await api.post('/messages', messageData);\n  return response.data;\n};\n\n// Export the configured axios instance in case it's needed elsewhere\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","interceptors","response","use","error","console","data","status","request","message","Promise","reject","getConversations","get","getMessages","waId","sendMessage","messageData","post"],"sources":["D:/WP-demo/whatsapp-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add a request interceptor to handle errors globally\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.error('API Error:', error.response.data);\n      console.error('Status:', error.response.status);\n      console.error('Headers:', error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      console.error('No response received:', error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.error('Error:', error.message);\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const getConversations = async () => {\n  const response = await api.get('/conversations');\n  return response.data;\n};\n\nexport const getMessages = async (waId) => {\n  const response = await api.get(`/messages/${waId}`);\n  return response.data;\n};\n\nexport const sendMessage = async (messageData) => {\n  const response = await api.post('/messages', messageData);\n  return response.data;\n};\n\n// Export the configured axios instance in case it's needed elsewhere\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAE5E;AACA,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC1BD,QAAQ,IAAKA,QAAQ,EACrBE,KAAK,IAAK;EACT,IAAIA,KAAK,CAACF,QAAQ,EAAE;IAClB;IACA;IACAG,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAACF,QAAQ,CAACI,IAAI,CAAC;IAChDD,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAACF,QAAQ,CAACK,MAAM,CAAC;IAC/CF,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAACF,QAAQ,CAACF,OAAO,CAAC;EACnD,CAAC,MAAM,IAAII,KAAK,CAACI,OAAO,EAAE;IACxB;IACAH,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACI,OAAO,CAAC;EACvD,CAAC,MAAM;IACL;IACAH,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACK,OAAO,CAAC;EACxC;EACA,OAAOC,OAAO,CAACC,MAAM,CAACP,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMQ,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,MAAMV,QAAQ,GAAG,MAAMN,GAAG,CAACiB,GAAG,CAAC,gBAAgB,CAAC;EAChD,OAAOX,QAAQ,CAACI,IAAI;AACtB,CAAC;AAED,OAAO,MAAMQ,WAAW,GAAG,MAAOC,IAAI,IAAK;EACzC,MAAMb,QAAQ,GAAG,MAAMN,GAAG,CAACiB,GAAG,CAAC,aAAaE,IAAI,EAAE,CAAC;EACnD,OAAOb,QAAQ,CAACI,IAAI;AACtB,CAAC;AAED,OAAO,MAAMU,WAAW,GAAG,MAAOC,WAAW,IAAK;EAChD,MAAMf,QAAQ,GAAG,MAAMN,GAAG,CAACsB,IAAI,CAAC,WAAW,EAAED,WAAW,CAAC;EACzD,OAAOf,QAAQ,CAACI,IAAI;AACtB,CAAC;;AAED;AACA,eAAeV,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}